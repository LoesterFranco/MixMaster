#!/bin/bash
DIR="MUDARPATHFULL"
LGS="MUDARLGS"
GMS="MUDARGMS"
ZS="MUDARZS"
LGSDIR="MUDARPATHLGS"
GMSDIR="MUDARPATHGMS"
ZSDIR="MUDARPATHZS"
LOGINF="/var/log/mixmaster/information.log"
LOGERR="/var/log/mixmaster/error.log"
date=$(date)
#############################################################################################################
function options() {
	OPTION=$(dialog \
		--stdout \
		--backtitle "MIXMASTER MANAGER" \
		--ok-label Continuar \
		--menu "O que deseja fazer?" \
		0 0 0 \
		1 "Iniciar Servidor" \
		2 "Parar Servidor" \
		3 "Reiniciar Servidor" )
	case $OPTION in
	1)
		echo "$date Opção selecionada: Iniciar Servidor" >>$LOGINF
		confirm
		;;
	2)
		echo "$date Opção selecionada: Parar Servidor" >>$LOGINF
		confirm
		;;
	3)
		echo "$date Opção selecionada: Reiniciar Servidor" >>$LOGINF
		confirm
		;;
	*)
		echo "$date Programa fechado" >>$LOGINF
		;;
	esac
}
function confirm() {
	dialog --backtitle "MIXMASTER MANAGER" --yes-label Sim --no-label Não --yesno "Confirmar ação?" 0 0
	case $? in
	0)
		echo "$date Ação confirmada" >>$LOGINF
		check
		;;
	*)
		echo "$date Ação rejeitada" >>$LOGINF
		options
		;;
	esac
}

function check() {
	case $OPTION in
	1) start ;;
	2) pre_check_stop ;;
	3) pre_check_restart ;;
	esac
}
function pre_check_stop() {
	dialog --backtitle "MIXMASTER MANAGER" --yes-label Sim --no-label Não --yesno "Deseja parar o LGS (Login Server)?" 0 0
	case $? in
	0)
		yesorno=1
		echo "$date Para LGS: Sim" >>$LOGINF
		stop
		;;
	1)
		yesorno=0
		echo "$date Para LGS: Não" >>$LOGINF
		stop
		;;
	*)
		echo "$date Janela rejeitada, voltando ao menu" >>$LOGINF
		options
		;;
	esac
}
function pre_check_restart() {
	dialog --backtitle "MIXMASTER MANAGER" --yes-label Sim --no-label Não --yesno "Deseja reiniciar o LGS (Login Server)?" 0 0
	case $? in
	0)
		yesorno=1
		echo "$date Reiniciar LGS: Sim" >>$LOGINF
		restart_stop
		;;
	1)
		yesorno=0
		echo "$date Reiniciar LGS: Não" >>$LOGINF
		restart_stop
		;;
	*)
		echo "$date Janela rejeitada, voltando ao menu" >>$LOGINF
		options
		;;
	esac
}
function start() {
	PSLGS=$(ps aux | grep $LGS | grep -v grep | wc -l)
	PSGMS=$(ps aux | grep $GMS | grep -v grep | wc -l)
	PSZS=$(ps aux | grep $ZS | grep -v grep | wc -l)
	if (($PSZS > 0)); then
		dialog --backtitle "MIXMASTER MANAGER" --ok-label Voltar --msgbox "ZS, GMS e LGS já estão ligados" 0 0
		echo "$date Servidor não iniciado: ZS, GMS e LGS já estão ligados" >>$LOGINF
		options
	elif (($PSGMS > 0)); then
		dialog --backtitle "MIXMASTER MANAGER" --ok-label Voltar --msgbox "GMS e LGS já estão ligados" 0 0
		echo "$date Servidor não iniciado: GMS e LGS já estão ligados" >>$LOGINF
		options
	elif (($PSLGS > 0)); then
		dialog --backtitle "MIXMASTER MANAGER" --ok-label Voltar --msgbox "LGS já está ligado" 0 0
		echo "$date Ignorando inicio da LGS, iniciando servidor" >>$LOGINF
		started
	else
		var=1
		started
	fi
}
function started() {
	if (($var == 1)); then
	cd $LGSDIR
	$LGS &
	echo "$date LGS iniciada" >>$LOGINF
	dialog --backtitle "MIXMASTER MANAGER" --infobox "Iniciando LGS" 0 0
	sleep 3
	fi
	cd $GMSDIR
	$GMS &
	echo "$date GMS iniciada" >>$LOGINF
	dialog --backtitle "MIXMASTER MANAGER" --infobox "Iniciando GMS" 0 0
	sleep 3

	cd $ZSDIR
	$ZS &
	echo "$date ZS iniciada" >>$LOGINF
	dialog --backtitle "MIXMASTER MANAGER" --infobox "Iniciando ZS" 0 0
	sleep 3

	dialog --backtitle "MIXMASTER MANAGER" --ok-label Voltar --msgbox "Servidor iniciado" 0 0
	echo "$date Servidor iniciada" >>$LOGINF
}
function stop() {
	PS=$(ps aux | grep $DIR | grep -v grep | wc -l)
	if [ -z $check ]; then
		if (($PS == 0)); then
			dialog --backtitle "MIXMASTER MANAGER" --ok-label Voltar --msgbox "Servidor já está desligado" 0 0
			echo "$date Ação não executada (Parar servidor): Servidor já desligado" >>$LOGINF
			options
		fi
	fi
	check=1
	PSZS=$(ps aux | grep $ZS | grep -v grep | wc -l)
	PSGMS=$(ps aux | grep $GMS | grep -v grep | wc -l)
	PSLGS=$(ps aux | grep $LGS | grep -v grep | wc -l)
	if (($PSZS > 0)); then
		PIDZS=$(ps aux | pgrep -f $ZS | grep -v grep)
		kill $PIDZS
		dialog --backtitle "MIXMASTER MANAGER" --infobox "Desligando ZS: 0%" 0 0
		I=10
		var=1
		stop_zs
	elif (($PSGMS > 0)); then
		PIDGMS=$(ps aux | pgrep -f $GMS | grep -v grep)
		kill $PIDGMS
		dialog --backtitle "MIXMASTER MANAGER" --infobox "Desligando GMS" 0 0
		sleep 3
		dialog --backtitle "MIXMASTER MANAGER" --infobox "GMS Desligada" 0 0
		echo "$date GMS Desligada" >>$LOGINF
		sleep 3
		stop
	elif (($PSLGS > 0)); then
		if (($yesorno == 1)); then
			PIDLGS=$(ps aux | pgrep -f $LGS | grep -v grep)
			kill $PIDLGS
			dialog --backtitle "MIXMASTER MANAGER" --infobox "Desligando LGS" 0 0
			sleep 3
			dialog --backtitle "MIXMASTER MANAGER" --infobox "LGS Desligada" 0 0
			sleep 3
			dialog --backtitle "MIXMASTER MANAGER" --ok-label Voltar --msgbox "Servidor desligado" 0 0
			echo "$date LGS Desligada" >>$LOGINF
			echo "$date Servidor Desligado" >>$LOGINF
			options
		else
			dialog --backtitle "MIXMASTER MANAGER" --ok-label Voltar --msgbox "Servidor desligado" 0 0
			echo "$date Servidor Desligado" >>$LOGINF
			options
		fi
	else
		dialog --backtitle "MIXMASTER MANAGER" --ok-label Voltar --msgbox "Servidor desligado" 0 0
		echo "$date Servidor Desligado" >>$LOGINF
		options
	fi
}
function stop_zs() {
	PSZS=$(ps aux | grep $ZS | grep -v grep | wc -l)
	if (($PSZS > 0)); then
		sleep 7
		dialog --backtitle "MIXMASTER MANAGER" --infobox "Desligando ZS: $I%" 0 0
		let I=($I + 10)
		stop_zs
	else
		dialog --backtitle "MIXMASTER MANAGER" --infobox "ZS Desligada" 0 0
		echo "$date ZS desligada" >>$LOGINF
		sleep 3
		if (($var == 1)); then
			stop
		elif (($var == 2)); then
			restart_stop
		fi
	fi
}
function restart_stop() {
	PS=$(ps aux | grep $DIR | grep -v grep | wc -l)
	if [ -z $check ]; then
		if (($PS == 0)); then
			dialog --backtitle "MIXMASTER MANAGER" --infobox "Servidor já está desligado, iniciando, aguarde..." 0 0
			restart_start
		fi
	fi
	PSZS=$(ps aux | grep $ZS | grep -v grep | wc -l)
	PSGMS=$(ps aux | grep $GMS | grep -v grep | wc -l)
	PSLGS=$(ps aux | grep $LGS | grep -v grep | wc -l)
	if (($PSZS > 0)); then
		PIDZS=$(ps aux | pgrep -f $ZS | grep -v grep)
		kill $PIDZS
		dialog --backtitle "MIXMASTER MANAGER" --infobox "Desligando ZS: 0%" 0 0
		I=10
		var=2
		stop_zs
	elif (($PSGMS > 0)); then
		PIDGMS=$(ps aux | pgrep -f $GMS | grep -v grep)
		kill $PIDGMS
		dialog --backtitle "MIXMASTER MANAGER" --infobox "Desligando GMS" 0 0
		sleep 3
		dialog --backtitle "MIXMASTER MANAGER" --infobox "GMS Desligada" 0 0
		echo "$date GMS Desligado" >>$LOGINF
		sleep 3
		restart_stop
	elif (($PSLGS > 0)); then
		if (($yesorno == 1)); then
			PIDLGS=$(ps aux | pgrep -f $LGS | grep -v grep)
			kill $PIDLGS
			dialog --backtitle "MIXMASTER MANAGER" --infobox "Desligando LGS" 0 0
			sleep 3
			dialog --backtitle "MIXMASTER MANAGER" --infobox "LGS Desligada" 0 0
			sleep 3
			dialog --backtitle "MIXMASTER MANAGER" --infobox "Ligando o servidor, aguarde..." 0 0
			echo "$date LGS Desligada" >>$LOGINF
			sleep 3
			onlgs=1
			restart_start
		else
			dialog --backtitle "MIXMASTER MANAGER" --infobox "Ligando o servidor, aguarde..." 0 0
			sleep 3
			onlgs=0
			restart_start
		fi
	else
		dialog --backtitle "MIXMASTER MANAGER" --infobox "Ligando o servidor, aguarde..." 0 0
		onlgs=1
		restart_start
	fi
}
function restart_start() {
	if (($onlgs == 1)); then
		cd $LGSDIR
		$LGS &
		echo "$date LGS Iniciada" >>$LOGINF
		dialog --backtitle "MIXMASTER MANAGER" --infobox "Iniciado LGS" 0 0
		sleep 3
	fi
	cd $GMSDIR
	$GMS &
	echo "$date GMS Iniciada" >>$LOGINF
	dialog --backtitle "MIXMASTER MANAGER" --infobox "Iniciado GMS" 0 0
	sleep 3

	cd $ZSDIR
	$ZS &
	echo "$date ZS Iniciada" >>$LOGINF
	dialog --backtitle "MIXMASTER MANAGER" --infobox "Iniciado ZS" 0 0
	sleep 3

	dialog --backtitle "MIXMASTER MANAGER" --ok-label Voltar --msgbox "Servidor Reiniciado" 0 0
	echo "$date Servidor Reiniciado" >>$LOGINF
}
#Create by: Gabriel Costa
#Date: 22/09
#Email: g.silvafdc@gmail.com
options
